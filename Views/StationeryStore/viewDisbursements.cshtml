@{
    ViewData["Title"] = "viewDisbursements";
    List<Disbursement> disb = (List<Disbursement>)ViewData["disbursements"];
    List<Departments> departments = (List<Departments>)ViewData["departments"];
    List<Disbursement> completedDisbursement = (List<Disbursement>)ViewData["completedDisb"];
    List<CollectionPoint> collectionPoint = (List<CollectionPoint>)ViewData["collectPoints"];

}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf=8">
    <title>Home</title>
    <link href="~/css/viewDisbursements.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css">
    <script src="https://use.fontawesome.com/973befe495.js"></script>
    <script src="https://use.fontawesome.com/releases/v5.14.0/js/all.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro:ital,wght@0,300;0,400;0,600;0,700;0,900;1,300;1,400;1,600;1,700;1,900&display=swap" rel="stylesheet">
</head>

<body>

    <div class="requisitionmenu">
        <button class="tablinks" onclick="openReq(event, 'Pending')" id="defaultOpen">Pending</button>
        <button class="tablinks" onclick="openReq(event, 'Collected')">Collected/Delivered</button>
    </div>

    <div id="main">
        <div class="requisitioncontainer" id="Pending">
            <div class="requisitionfilter">
                <form>
                    <h1>Disbursements</h1>
                    <fieldset>
                        <div style="float:left;margin-right:20px;">
                            <label for="CompiledOn">Compiled On</label>
                            <input type="Date" name="EndDate" id="dateCompiledPending">
                        </div>
                        <div style="float:left;">
                            <label for="CollectDate">Collection Date</label>
                            <input type="Date" name="CollectDate" id="dateCollectionPending">
                        </div>
                    </fieldset>

                    <fieldset>
                        <div style="float:left;margin-right:20px;">
                            <label for="Department">Department name</label>
                            <select id="deptPending" name="Department">
                                <option value="a" selected>All Departments</option>
                                @foreach (var d in departments)
                                {
                                    <option value="@d.DeptName">@d.DeptName</option>

                                }
                            </select>
                        </div>
                    </fieldset>
                </form>
            </div>


            <table class="requisitiontable" id="Pendingtable">
                <tr>
                    <th>Collection Date</th>
                    <th>Department</th>
                    <th>Compiled On</th>
                    <th>Prepared By</th>
                    <th>Acknowledgement</th>
                </tr>
                <tbody id="pendingUnfiltered">
                    @foreach (var d in disb)
                    {
                        var id = d.Id.ToString();
                        <tr onclick="viewDisDetail('@id')">
                            <td>@d.CollectionDate.ToShortDateString()</td>
                            <td>@d.Departments.DeptName</td>
                            <td>@d.GeneratedDate.ToShortDateString()</td>
                            <td>@d.storeClerk.Name</td>
                            <td><button onclick="" style="color:#1f5f89"><i class="fa fa-arrow-right" aria-hidden="true"></i></button></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="requisitioncontainer" id="Collected">
            <div class="requisitionfilter">
                <form>
                    <h1>Disbursements</h1>
                    <fieldset>
                        <div style="float:left;margin-right:20px;">
                            <label for="CompiledOn">Compiled On</label>
                            <input type="Date" name="EndDate" id="completedCompiledDate">
                        </div>
                        <div style="float:left;">
                            <label for="CollectDate">Collection Date</label>
                            <input type="Date" name="CollectDate" id="completedCollDate">
                        </div>
                    </fieldset>

                    <fieldset>
                        <div style="float:left;margin-right:20px;">
                            <label for="Department">Department name</label>
                            <select id="deptCollected" name="Department">
                                <option value="a" selected>All Departments</option>
                                @foreach (var d in departments)
                                {
                                    <option value="@d.DeptName" selected>@d.DeptName</option>

                                }
                            </select>
                        </div>
                    </fieldset>
                </form>
            </div>

            <table class="requisitiontable">
                <tr onclick="viewDisDetail()">
                    <th>Collection Date</th>
                    <th>Department</th>
                    <th>Compiled On</th>
                    <th>Status</th>
                    <th>Prepared By</th>
                </tr>
                <tbody id="completedUnfiltered">
                    @foreach (var d in completedDisbursement)
                    {
                        <tr onclick="viewDisDetail('@d.Id')">
                            <td>@d.CollectionDate</td>
                            <td>@d.Departments.DeptName</td>
                            <td>@d.GeneratedDate</td>
                            <td>@d.status</td>
                            <td>@d.storeClerk.Name</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

 <div class="bg-modal">
        <div class="modal-contents">
            <button id="close" onclick="closePopUp()"><i class="fas fa-window-close"></i></button>
            <div class="disbTitle">
                <h1><span>Disbursement</span> Details</h1>
            </div>
            <div class="changeDisb" id="DisbDetails">
                <form id="submitForm">
                    <label for="CollectionDate"> Collection Date</label>
                    <input type="Date" name="CollectionDate" id="collDateSpec">
                    <label for="CollectionPoint">Collection Point</label>
                    <select name="CollectionPoint" id="collPtSpec">
                        @foreach (var cp in collectionPoint)
                        {
                        <option value="@cp.Location">@cp.Location</option>
                        }
                    </select>
                    <label for="Rep">Representative Name</label>
                    <p name="Rep" id="repSpec"></p>

                    <div class="modal-table">
                        <table>
                            <tr style="border-bottom: 1px solid gray;">
                                <th>Item</th>
                                <th>Requested</th>
                                <th>Retrieved</th>
                            </tr>
                            <tbody id="disbDetailsQty">
                            </tbody>
                        </table>
                    </div>
                    <button onclick="submitChangesDisb()">Submit Changes</button>
                </form>

            </div>
        </div>
</div>
</body>

<script>

    document.getElementById("defaultOpen").click();

    function tableToJson(table) {
        console.log("converting table to JSON");
        var data = [];

        // first row needs to be headers
        var headers = [];
        for (var i = 0; i < table.rows[0].cells.length; i++) {
            headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi, '');
        }

        // go through cells
        for (var i = 1; i < table.rows.length; i++) {

            var tableRow = table.rows[i];
            var rowData = {};

            for (var j = 0; j < tableRow.cells.length; j++) {

                rowData[headers[j]] = tableRow.cells[j].innerHTML;
            }

            data.push(rowData);
        }
        return data;
    }

    /*Change table into JSON*/
    var pretable = document.getElementById('Pendingtable');
    var tableJson = JSON.stringify(tableToJson(pretable));

    $('#deptPending').change('keyup', function () {
        /*get the value selected*/
        var value = $(this).val();
        /* search the html table for the matching dept name */
        if (value.length < 2) {
            console.log("All dept selected");
            var data1 = getAll(tableJson);
            console.log("Data to be passed in to buildTable: " + data1);
            buildTable(data1, "pendingUnfiltered");
        }
        else if (value.length > 1) {
            console.log(value + " selected");
            var data2 = searchTable(value, tableJson);
            console.log("Data to be passed in to buildTable: " + data2);
            buildTable(data2, "pendingUnfiltered");
        }
    });

    $('#dateCollectionPending').change('keyup', function () {
        var value = $(this).val();
        var inputDate = new Date(value);
        console.log(inputDate);
        var dataByDate = searchTableByCollDate(inputDate, tableJson);
        buildTable(dataByDate, "pendingUnfiltered");
        $(this).value = "";
    });

    $('#dateCompiledPending').change('keyup', function () {
        var value = $(this).val();
        var inputDate = new Date(value);
        console.log(inputDate);
        var dataByDate = searchTableByComDate(inputDate, tableJson);
        buildTable(dataByDate, "pendingUnfiltered");
        $(this).value = "";
    });

    function searchTable(value, data) {
        console.log("Reached searchTable");
        console.log("Printing value:", value);
        console.log("Printing data: ", data);
        var obj = JSON.parse(data);
        var filteredData = [];
        for (var i = 0; i < obj.length; i++) {
            var name = obj[i].department;
            console.log('Department from JSON:', name);
            if (name == value) {
                filteredData.push(obj[i]);
            }
        }
        return filteredData;
    }

    function searchTableByCollDate(inputDate, data) {
        var obj = JSON.parse(data);
        console.log("Date input:", inputDate);
        var filteredData = [];
        for (var i = 0; i < obj.length; i++) {
            var name = obj[i].collectiondate;
            var rowDate = new Date(name);
            console.log('Collection date from JSON:', rowDate);
            if (rowDate.toDateString() == inputDate.toDateString()) {
                console.log("found a record with matching date");
                filteredData.push(obj[i]);
            }
        }
        return filteredData;
    }

    function searchTableByComDate(inputDate, data) {
        var obj = JSON.parse(data);
        console.log("Date input:", inputDate);
        var filteredData = [];
        for (var i = 0; i < obj.length; i++) {
            var name = obj[i].collectiondate;
            var rowDate = new Date(name);

            if (rowDate.toDateString() == inputDate.toDateString()) {
                console.log("found a record with matching date");
                filteredData.push(obj[i]);
            }
        }
        return filteredData;
    }

    function getAll(alldata) {
        var obj = JSON.parse(alldata);
        var filteredData = [];
        for (var i = 0; i < obj.length; i++) {
            filteredData.push(obj[i]);
        }
        return filteredData;
    }

    var comTable = document.getElementById('Completedtable');
    var comTableJSON = JSON.stringify(tableToJson(comTable));

    $('#deptCompleted').change('keyup', function () {
        /*get the value selected*/
        var value = $(this).val();
        /* search the html table for the matching dept name */
        if (value.length < 2) {
            console.log("All dept selected");
            var data1 = getAll(comTableJSON);
            buildTable(data1, "completedUnfiltered");
        }
        else if (value.length > 1) {
            console.log(value + " selected");
            var data2 = searchTable(value, comTableJSON);
            buildTable(data2, "completedUnfiltered");
        }
    });

    $('#completedCompiledDate').change('keyup', function () {
        var value = $(this).val();
        var inputDate = new Date(value);
        console.log(inputDate);
        var dataByDate = searchTableByComDate(inputDate, comTableJSON);
        buildTable(dataByDate, "pendingUnfiltered");
        $(this).value = "";
    });

    $('#completedCollDate').change('keyup', function () {
        var value = $(this).val();
        var inputDate = new Date(value);
        console.log(inputDate);
        var dataByDate = searchTableByComDate(inputDate, comTableJSON);
        buildTable(dataByDate, "pendingUnfiltered");
        $(this).value = "";
    });

    function buildTable(data, tableBodyId) {
        var tableOld = document.getElementById(tableBodyId);
        tableOld.innerHTML = "";
        for (var i = 0; i < data.length; i++) {
            console.log(data[i]);
            var row = `<tr>
                <td>${data[i].collectiondate}</td>
                <td>${data[i].department}</td>
                <td>${data[i].compiledon}</td>
                <td>Adam Smith</td>
                <td><button onclick="" style="color:#1f5f89"><i class="fa fa-arrow-right" aria-hidden="true"></i></button></td>
                </tr>`;
            tableOld.innerHTML += row;
        }
    }

    document.getElementById("defaultOpen").click();

    function openReq(evt, cityName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("requisitioncontainer");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    }


    function viewDisDetail(e) {
        $.ajax({
            type: 'POST',
            url: '/StationeryStore/GetEmployeeTest',
            data: { 'id': e },
            dataType: "json",
            success: function (response) {
                var jsonObject = JSON.parse(response.disbursementJson);
                var collDate = new Date(jsonObject.CollectionDate);
                var collDateString = collDate.toISOString().substr(0, 10);
                $("#collDateSpec").val(collDateString);
                $("#collPtSpec").val(jsonObject.Departments.CollectionPoint.Location);
                var p = document.createElement('p');
                var deptrep = JSON.parse(response.repName);
                console.log("representative name is" + deptrep);
                //$("repSpec").innerHTML = deptrep;
                document.getElementById('repSpec').innerHTML = deptrep;
                //document.getElementById('repSpec').appendChild(p);
                var items = jsonObject.DisbursementDetails;
                console.log("items is" + items);
                var tabledisQty = document.getElementById('disbDetailsQty');
                for (var i = 0; i < items.length; i++) {
                    var distributedQty = parseInt(items[i].RequisitionDetail.DistributedQty);
                    var rowItem = `<tr>
                <td>${items[i].RequisitionDetail.Inventory.description}</td>
                <td>${items[i].RequisitionDetail.RequestedQty}</td>
                <td>${distributedQty}</td>
                <input type="hidden" id="rqdId" value=${jsonObject.Id}/>
                </tr>`;
                    tabledisQty.innerHTML += rowItem;
                }
            }
        });

        document.querySelector('.bg-modal').style.display = "flex";
    }

    function closePopUp() {
        document.querySelector('.bg-modal').style.display = "none";
    }

    function submitChangesDisb() {
        var newDate = $("#collDateSpec").val();
        var newLocation = $("#collPtSpec").val();
        var rqId = $("#rqdId").val();
        console.log("Printing:" + newDate);
        $.ajax({
            type: 'POST',
            url: '/StationeryStore/SaveChangesToDisb',
            data: { 'newDate': newDate, 'newColl': newLocation, 'rqId': rqId },
            success: function (result) {
                console.log("wow" + result);
            }
        });
        var clearTable = document.getElementById("Pending");
        clearTable.innerHTML = "";
    }
</script>
</html>